{'method': 'bayes',
 'metric': {'goal': 'minimize', 'name': 'val/val_loss'},
 'parameters': {'activation_type': {'values': ['relu', 'elu']},
                'dropout': {'values': [0.1, 0.2, 0.3]},
                'epochs': {'value': 50},
                'filter_sizings': {'values': [10, 20, 40]},
                'learning_rate': {'distribution': 'uniform',
                                  'max': 0.01,
                                  'min': 0.0001},
                'mean_pools': {'values': [15, 25, 50]},
                'receptive_fields': {'values': [75, 50, 25]}}}
Traceback (most recent call last):
  File "C:\Users\Tim de Boer\Documents\VU\Master_Artificial_Intelligence\9_BCI_MasterProject\BCI_Code\unicorn_MI_BCI\scripts\3_TL.py", line 128, in <module>
    main()
  File "C:\Users\Tim de Boer\Documents\VU\Master_Artificial_Intelligence\9_BCI_MasterProject\BCI_Code\unicorn_MI_BCI\scripts\3_TL.py", line 117, in main
    execution(pline, subj, type)
  File "C:\Users\Tim de Boer\Documents\VU\Master_Artificial_Intelligence\9_BCI_MasterProject\BCI_Code\unicorn_MI_BCI\scripts\3_TL.py", line 88, in execution
    utils_TL.run_model(trainloader, valloader, lr, window_size, n_electrodes, receptive_field,
  File "c:\users\tim de boer\documents\vu\master_artificial_intelligence\9_bci_masterproject\bci_code\unicorn_mi_bci\src\utils_TL.py", line 256, in run_model
    loss.backward()
  File "C:\Users\Tim de Boer\anaconda3\envs\UnicornBCI\lib\site-packages\torch\_tensor.py", line 307, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "C:\Users\Tim de Boer\anaconda3\envs\UnicornBCI\lib\site-packages\torch\autograd\__init__.py", line 154, in backward
    Variable._execution_engine.run_backward(
KeyboardInterrupt